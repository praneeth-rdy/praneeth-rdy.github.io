{"version":3,"file":"component---src-pages-index-js-e6a48d507ecbb50e2b7a.js","mappings":"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","sources":["webpack://praneeth-rdy.github.io/./src/components/horizontalLine.js","webpack://praneeth-rdy.github.io/./src/components/home/IntroSection.js","webpack://praneeth-rdy.github.io/./src/components/home/AboutSection.js","webpack://praneeth-rdy.github.io/./src/components/home/SkillsetSection.js","webpack://praneeth-rdy.github.io/./src/styles/css/screens/home/skillset-section.module.css","webpack://praneeth-rdy.github.io/./src/components/core/Tooltip.jsx","webpack://praneeth-rdy.github.io/./src/components/core/ExpandableText.jsx","webpack://praneeth-rdy.github.io/./src/components/home/ExperienceSection.js","webpack://praneeth-rdy.github.io/./src/components/home/ProjectsSection.js","webpack://praneeth-rdy.github.io/./src/styles/css/screens/home/projects-section.module.css","webpack://praneeth-rdy.github.io/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\n\nfunction HorizontalLine({ color, margin }) {\n  if (margin === \"\") {\n    margin = \"30px\"\n  }\n  return (\n    <hr\n      style={{\n        backgroundColor: color,\n        height: 2,\n        margin: margin + \" 0\",\n      }}\n    />\n  )\n}\n\nexport default HorizontalLine\n","import React from \"react\"\n// import Img from \"gatsby-image\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { FaEnvelope, FaFacebook, FaGithub, FaLinkedin } from \"react-icons/fa\"\n\nimport \"../../styles/css/screens/home/intro-section.css\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nfunction IntroSection({ darkModeImage, lightModeImage, data, isDarkMode }) {\n  const social = data.site.siteMetadata.social\n  const fullName = data.site.siteMetadata.authorFullName\n  // console.log(social)\n  return (\n    <section className=\"page-head intro-section\">\n      <div className=\"intro-text\">\n        <div>\n          <h3>Hello, I'm</h3>\n          <h1>{fullName}</h1>\n          <h3 className=\"designation\">Passionate Full Stack Developer</h3>\n          <a\n            className=\"link button grow\"\n            href=\"19AE30030_Praneeth-Reddy-Kolanu_Resume.pdf\"\n            download=\"19AE30030_Praneeth-Reddy-Kolanu_Resume.pdf\"\n          >\n            Download Resume\n          </a>\n          <div className=\"icons-container\">\n            <a\n              href={social.github}\n              target=\"_blank\"\n              className=\"link\"\n              rel=\"noreferrer\"\n            >\n              <FaGithub className=\"icon\" target=\"_blank\" />\n            </a>\n            <a\n              href={social.linkedin}\n              target=\"_blank\"\n              className=\"link\"\n              rel=\"noreferrer\"\n            >\n              <FaLinkedin className=\"icon\" target=\"_blank\" />\n            </a>\n            <a\n              href={social.facebook}\n              target=\"_blank\"\n              className=\"link\"\n              rel=\"noreferrer\"\n            >\n              <FaFacebook className=\"icon\" target=\"_blank\" />\n            </a>\n            <a\n              href={\"mailto:\" + social.email}\n              target=\"_blank\"\n              className=\"link\"\n              rel=\"noreferrer\"\n            >\n              <FaEnvelope className=\"icon\" />\n            </a>\n          </div>\n        </div>\n      </div>\n      <GatsbyImage\n        className=\"intro-image\"\n        image={isDarkMode ? darkModeImage : lightModeImage}\n        style={{ width: \"400px\" }}\n        alt=\"Intro Image\"\n      />\n    </section>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        authorFullName\n        social {\n          github\n          linkedin\n          facebook\n          email\n        }\n      }\n    }\n  }\n`\n\nconst IntroSectionExport = props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => <IntroSection props data={data} {...props} />}\n  />\n)\n\nexport default IntroSectionExport\n","import React from \"react\"\nimport \"../../styles/css/screens/home/about-section.css\"\n// import Img from \"gatsby-image\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nfunction AboutSection({ image }) {\n  return (\n    <section className=\"home-section post-content-body\">\n      <h2 className=\"section-heading\">About</h2>\n      <div className=\"about-content row\">\n        <figure className=\"about-image\">\n          {/* <Img fluid={image} className=\"\" style={{ borderRadius: \"8px\" }} /> */}\n          <GatsbyImage\n            image={image}\n            style={{ borderRadius: \"8px\" }}\n            alt=\"About Image\"\n          />\n        </figure>\n        <div className=\"about-description\">\n          <p>\n            My name is Praneeth Reddy Kolanu, and I am a passionate problem\n            solver who enjoys tackling complex challenges through a unique blend\n            of technical expertise, business acumen, and project management\n            skills.\n          </p>\n          <p>\n            With a strong background in software engineering and business\n            management, I am driven by a desire to leverage technology for the\n            greater good. Whether it's building innovative software applications\n            or contributing to open-source projects, I am always seeking new\n            ways to make a positive impact on society.\n          </p>\n          <p>\n            In my free time, I enjoy exploring new technologies, mastering data\n            structures and algorithms, and honing my problem-solving skills. I\n            am always up for a challenge and thrive in dynamic, fast-paced\n            environments.\n          </p>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default AboutSection\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n// import Img from \"gatsby-image\"\nimport * as Styles from \"../../styles/css/screens/home/skillset-section.module.css\"\n\nfunction SkillsetSection({ data, isDarkMode }) {\n  //use data as props.data\n  const skills = data.dataJson.skills\n  return (\n    <section className=\"home-section post-content-body\">\n      <h2 className=\"section-heading\">Skillset</h2>\n      <div className={Styles.skillCardsContainer}>\n        {skills &&\n          skills.map((skill, index) => {\n            const skillLogo = isDarkMode\n              ? skill.darkModeLogo\n              : skill.lightModeLogo\n            return (\n              <div key={index} className={Styles.skillCard}>\n                {skillLogo.childImageSharp.gatsbyImageData && (\n                  <GatsbyImage\n                    image={skillLogo.childImageSharp.gatsbyImageData}\n                    style={{ borderRadius: \"8px\" }}\n                    alt=\"Skill Logo\"\n                  />\n                )}\n              </div>\n            )\n          })}\n      </div>\n    </section>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    dataJson {\n      skills {\n        name\n        darkModeLogo {\n          childImageSharp {\n            gatsbyImageData(\n              height: 50\n              layout: FIXED\n              transformOptions: { fit: COVER }\n            )\n          }\n        }\n        lightModeLogo {\n          childImageSharp {\n            gatsbyImageData(height: 50)\n          }\n        }\n        website\n      }\n    }\n  }\n`\n\nconst SkillsetSectionExport = props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => <SkillsetSection props data={data} {...props} />}\n  />\n)\n\nexport default SkillsetSectionExport\n","// extracted by mini-css-extract-plugin\nexport var dark = \"skillset-section-module--dark--UoVR4\";\nexport var light = \"skillset-section-module--light--uTcWQ\";\nexport var skillCard = \"skillset-section-module--skillCard--+6nf+\";\nexport var skillCardsContainer = \"skillset-section-module--skillCardsContainer--3goil\";","import React, { useState } from \"react\"\nimport \"../../styles/css/components/core/tooltip.css\"\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nconst Tooltip = ({ children, text, position = \"top\" }) => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  const handleMouseEnter = () => {\n    setIsVisible(true)\n  }\n\n  const handleMouseLeave = () => {\n    setIsVisible(false)\n  }\n\n  return (\n    <div\n      className=\"tooltip-container\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      role=\"tooltip\"\n    >\n      {children}\n      {isVisible && <div className={`tooltip tooltip-${position}`}>{text}</div>}\n    </div>\n  )\n}\n\nexport default Tooltip\n","import React, { useState } from \"react\"\n\nexport default function ExpandableText(props) {\n  const { children, className, charLimit = 100 } = props\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const text = children?.toString() || \"\"\n  const shouldTruncate = text.length > charLimit\n  const displayText =\n    shouldTruncate && !isExpanded\n      ? text.slice(0, charLimit).trim() + \"...\"\n      : text\n\n  const toggleExpand = () => {\n    setIsExpanded(current => !current)\n  }\n\n  return (\n    <p className={`expandable-text-container ${className}`}>\n      {displayText}\n      {shouldTruncate && (\n        <span\n          onClick={toggleExpand}\n          onKeyPress={e => {\n            if (e.key === \"Enter\" || e.key === \" \") {\n              toggleExpand()\n            }\n          }}\n          role=\"button\"\n          tabIndex={0}\n          className=\"expandable-text\"\n        >\n          {isExpanded ? \"read less\" : \"read more\"}\n        </span>\n      )}\n    </p>\n  )\n}\n","import React, { useState } from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport \"../../styles/css/screens/home/experience-section.css\"\nimport { FaStar } from \"react-icons/fa\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport Tooltip from \"../core/Tooltip\"\nimport ExpandableText from \"../core/ExpandableText\"\n\nconst ExperienceStatus = {\n  COMPLETED: \"Completed\",\n  PRESENT: \"Present\",\n}\n\nfunction ExperienceSection({ data }) {\n  const [showAll, setShowAll] = useState(false)\n  const allExperiences = data.dataJson.experience\n\n  if (!allExperiences) return null\n\n  const initialMaxCount = 4\n  const visibleExperiences = showAll\n    ? allExperiences\n    : allExperiences.slice(0, initialMaxCount)\n\n  const getTagClassnameByStatus = status => {\n    switch (status) {\n      case ExperienceStatus.COMPLETED:\n        return \"experience-status-tag-completed\"\n      case ExperienceStatus.PRESENT:\n        return \"experience-status-tag-present\"\n      default:\n        return \"\"\n    }\n  }\n\n  const getTagClassnameByType = type => {\n    switch (type.toLowerCase()) {\n      case \"position of responsibility\":\n        return \"experience-type-tag-por\"\n      case \"opensource\":\n        return \"experience-type-tag-opensource\"\n      default:\n        return \"\"\n    }\n  }\n\n  const getTooltipTextByType = type => {\n    switch (type.toLowerCase()) {\n      case \"position of responsibility\":\n        return \"This experience is a Position of Responsibility at IIT Kharagpur\"\n      case \"opensource\":\n        return \"This experience is an Open Source Contribution\"\n      default:\n        return \"\"\n    }\n  }\n\n  const toggleExpand = () => {\n    setShowAll(current => !current)\n  }\n\n  return (\n    <section className=\"home-section post-content-body\">\n      <h2 className=\"section-heading\">\n        <span>Experience</span>\n      </h2>\n      <div className=\"experience-container\">\n        {visibleExperiences.map((experience, index) => (\n          <div className=\"experience-card b-shadow-card\" key={index}>\n            <div className=\"experience-frontmatter-container\">\n              <span\n                className={`experience-status-tag ${getTagClassnameByStatus(\n                  experience.status\n                )}`}\n              >\n                {experience.status}\n              </span>\n            </div>\n            <div className=\"experience-header\">\n              <div className=\"experience-org-container\">\n                <h3 className=\"experience-title\">{experience.org}</h3>\n                {experience.orgLogo && (\n                  <GatsbyImage\n                    image={experience.orgLogo.childImageSharp.gatsbyImageData}\n                    alt={experience.org}\n                    className=\"experience-org-logo\"\n                  />\n                )}\n                {!experience.type && experience.returnOffer && (\n                  <Tooltip text=\"Received a return offer\" position=\"top\">\n                    <span className=\"experience-trophy\">\n                      <FaStar size={16} />\n                    </span>\n                  </Tooltip>\n                )}\n              </div>\n              <div className=\"experience-header-tags\">\n                {experience.type && (\n                  <Tooltip\n                    text={getTooltipTextByType(experience.type)}\n                    position=\"top\"\n                  >\n                    <span\n                      className={`experience-type-tag ${getTagClassnameByType(\n                        experience.type\n                      )}`}\n                    >\n                      {experience.type}\n                    </span>\n                  </Tooltip>\n                )}\n                {experience.type && experience.returnOffer && (\n                  <Tooltip text=\"Received a return offer\" position=\"top\">\n                    <span className=\"experience-trophy\">\n                      <FaStar size={16} />\n                    </span>\n                  </Tooltip>\n                )}\n              </div>\n            </div>\n            <ExpandableText className=\"experience-description\" charLimit={120}>\n              {experience.description}\n            </ExpandableText>\n            <div className=\"experience-tags-container\">\n              {experience.tags.map((tag, tagIndex) => (\n                <span className=\"experience-tag\" key={tagIndex}>\n                  {tag}\n                </span>\n              ))}\n            </div>\n            <div className=\"experience-roles-container\">\n              {experience.roles.map((role, roleIndex) => (\n                <div className=\"experience-role\" key={roleIndex}>\n                  <h4 className=\"experience-role-title\">{role.title}</h4>\n                  <p className=\"experience-role-duration\">\n                    {role.start}\n                    {role.end && ` - ${role.end}`}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n      {allExperiences.length > initialMaxCount && (\n        <div className=\"text-center experience-expand-container\">\n          <button\n            className=\"primary experience-expand-button\"\n            onClick={toggleExpand}\n          >\n            {showAll ? \"Show Less\" : \"Show More\"}\n          </button>\n        </div>\n      )}\n    </section>\n  )\n}\nconst indexQuery = graphql`\n  query {\n    dataJson {\n      experience {\n        org\n        orgLogo {\n          childImageSharp {\n            gatsbyImageData(\n              width: 30\n              height: 30\n              layout: FIXED\n              transformOptions: { fit: COVER }\n            )\n          }\n        }\n        returnOffer\n        status\n        type\n        tags\n        description\n        roles {\n          title\n          start\n          end\n        }\n      }\n    }\n  }\n`\n\nconst ExperienceSectionExport = props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => <ExperienceSection props data={data} {...props} />}\n  />\n)\n\nexport default ExperienceSectionExport\n","import React, { useState } from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport * as Styles from \"../../styles/css/screens/home/projects-section.module.css\"\nimport { FaBookOpen, FaGithub, FaLink } from \"react-icons/fa\"\nimport { MdOutlineSecurity } from \"react-icons/md\"\nimport ExpandableText from \"../core/ExpandableText\"\nimport Tooltip from \"../core/Tooltip\"\n\nfunction ProjectsSection({ data }) {\n  const [showAll, setShowAll] = useState(false)\n  const allProjects = data.dataJson.projects\n\n  const initialMaxCount = 2\n  const visibleProjects = showAll\n    ? allProjects\n    : allProjects.slice(0, initialMaxCount)\n\n  const toggleExpand = () => {\n    setShowAll(current => !current)\n  }\n\n  return (\n    <section className=\"home-section post-content-body\">\n      <h2 className=\"section-heading\">Projects</h2>\n      <div className={Styles.projectCardsContainer}>\n        {visibleProjects.map((project, index) => {\n          return (\n            <div key={index} className={`${Styles.card} 'b-shadow' 'grow'`}>\n              <div className={Styles.cardImage}>\n                <GatsbyImage\n                  image={project.thumbnail.childImageSharp.gatsbyImageData}\n                  alt={`${project.title} Image`}\n                />\n              </div>\n              <div className={Styles.body}>\n                <div className={Styles.headingContainer}>\n                  <h3 className={`${Styles.heading}`}>{project.title}</h3>\n                  {project.associatedWith.logo && (\n                    <Tooltip\n                      text={`This project is associated with ${project.associatedWith.org}`}\n                      position=\"top\"\n                    >\n                      <img\n                        src={\n                          project.associatedWith.logo.childImageSharp\n                            .gatsbyImageData.images.fallback.src\n                        }\n                        alt={project.associatedWith.org}\n                        className={Styles.orgLogo}\n                      />\n                    </Tooltip>\n                  )}\n                  {project.confidential && (\n                    <Tooltip\n                      text=\"Confidential information is hidden\"\n                      position=\"top\"\n                    >\n                      <span className={Styles.confidentialIcon}>\n                        <MdOutlineSecurity size={16} />\n                      </span>\n                    </Tooltip>\n                  )}\n                </div>\n                {/* <div className={Styles.datesContainer}>\n                  <span className={Styles.date}>\n                    {project.dates.start}\n                  </span>\n                  <span className={Styles.dateSeparator}>-</span>\n                  <span className={Styles.date}>\n                    {project.dates.end}\n                  </span>\n                </div> */}\n                <div className={Styles.descriptionContainer}>\n                  <ExpandableText\n                    className={Styles.cardDescription}\n                    charLimit={300}\n                  >\n                    {project.description}\n                  </ExpandableText>\n                </div>\n                <div className={Styles.additionalInfo}>\n                  <div className={Styles.stacksContainer}>\n                    {project.stacks.map(({ childImageSharp }, index) => (\n                      <GatsbyImage\n                        key={index}\n                        className={Styles.stack}\n                        image={childImageSharp.gatsbyImageData}\n                        alt={`Stack Image`}\n                        objectFit=\"contain\"\n                      />\n                    ))}\n                  </div>\n                  <div className={`icons-container ${Styles.projectLinks}`}>\n                    {project.attachments.repository && (\n                      <a\n                        className=\"link\"\n                        href={project.attachments.repository}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        <FaGithub />\n                      </a>\n                    )}\n                    {project.attachments.documentation && (\n                      <a\n                        className=\"link\"\n                        href={project.attachments.documentation}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        <FaBookOpen />\n                      </a>\n                    )}\n                    {project.attachments.site && (\n                      <a\n                        className=\"link\"\n                        href={project.attachments.site}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        <FaLink />\n                      </a>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n      {allProjects.length > initialMaxCount && (\n        <div className=\"text-center projects-expand-container\">\n          <button\n            className=\"primary projects-expand-button\"\n            onClick={toggleExpand}\n          >\n            {showAll ? \"Show Less\" : \"Show More\"}\n          </button>\n        </div>\n      )}\n    </section>\n  )\n}\nconst indexQuery = graphql`\n  query {\n    dataJson {\n      projects {\n        title\n        description\n        confidential\n        associatedWith {\n          org\n          logo {\n            childImageSharp {\n              gatsbyImageData(\n                width: 20\n                height: 20\n                layout: FIXED\n                transformOptions: { fit: COVER }\n              )\n            }\n          }\n        }\n        dates {\n          start(formatString: \"MMM 'YY\")\n          end(formatString: \"MMM 'YY\")\n        }\n        stacks {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        attachments {\n          repository\n          documentation\n          site\n        }\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(height: 220, width: 330)\n          }\n        }\n      }\n    }\n  }\n`\n\nconst ProjectsSectionExport = props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => <ProjectsSection props data={data} {...props} />}\n  />\n)\n\nexport default ProjectsSectionExport\n","// extracted by mini-css-extract-plugin\nexport var additionalInfo = \"projects-section-module--additionalInfo--AyrEu\";\nexport var body = \"projects-section-module--body--j07Pe\";\nexport var card = \"projects-section-module--card--vwkXR\";\nexport var cardDescription = \"projects-section-module--cardDescription--3k1K7\";\nexport var cardImage = \"projects-section-module--cardImage--V-AlC\";\nexport var confidentialIcon = \"projects-section-module--confidentialIcon--uLCD1\";\nexport var dark = \"projects-section-module--dark--7YMjx\";\nexport var descriptionContainer = \"projects-section-module--descriptionContainer--i7jPI\";\nexport var heading = \"projects-section-module--heading--4AjE6\";\nexport var headingContainer = \"projects-section-module--headingContainer--kB7Ng\";\nexport var light = \"projects-section-module--light--rvObQ\";\nexport var orgLogo = \"projects-section-module--orgLogo--toQDx\";\nexport var projectCardsContainer = \"projects-section-module--projectCardsContainer--PaCzW\";\nexport var projectLinks = \"projects-section-module--projectLinks--sEqZm\";\nexport var projectsExpandContainer = \"projects-section-module--projects-expand-container--2wtVp\";\nexport var stack = \"projects-section-module--stack--Lfztq\";\nexport var stacksContainer = \"projects-section-module--stacksContainer--FFVrB\";","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport HorizontalLine from \"../components/horizontalLine\"\n\n// import \"../styles/global.scss\"\nimport \"../styles/normalize.css\"\nimport \"../styles/css/screens/main.css\"\nimport \"../styles/css/screens/home/index.css\"\n\nimport IntroSection from \"../components/home/IntroSection\"\nimport AboutSection from \"../components/home/AboutSection\"\nimport SkillsetSection from \"../components/home/SkillsetSection\"\nimport ExperienceSection from \"../components/home/ExperienceSection\"\nimport ProjectsSection from \"../components/home/ProjectsSection\"\nimport ThemeContextProvider from \"../context/ThemeContextProvider\"\n\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst Index = ({ data }, location) => {\n  const navHeading = data.site.siteMetadata.navHeading\n  const darkModeImage = data.darkModeImage.childImageSharp.gatsbyImageData\n  const lightModeImage = data.lightModeImage.childImageSharp.gatsbyImageData\n  const aboutPic = data.aboutPic.childImageSharp.gatsbyImageData\n\n  return (\n    <ThemeContextProvider>\n      <Layout navHeading={navHeading} path=\"/\">\n        <Seo\n          title=\"Home\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        {/* Introduction Section */}\n        <IntroSection\n          darkModeImage={darkModeImage}\n          lightModeImage={lightModeImage}\n        />\n        <HorizontalLine color=\"rgba(0, 0, 0, 0.5)\" />\n        <AboutSection image={aboutPic} />\n        <ExperienceSection />\n        <ProjectsSection />\n        <SkillsetSection />\n      </Layout>\n    </ThemeContextProvider>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        navHeading\n        description\n      }\n    }\n    lightModeImage: file(relativePath: { eq: \"home/intro-light-mode.png\" }) {\n      childImageSharp {\n        gatsbyImageData\n      }\n    }\n    darkModeImage: file(relativePath: { eq: \"home/intro-dark-mode.png\" }) {\n      childImageSharp {\n        gatsbyImageData\n      }\n    }\n    aboutPic: file(relativePath: { eq: \"home/about.jpg\" }) {\n      childImageSharp {\n        gatsbyImageData\n      }\n    }\n  }\n`\n\nconst IndexExport = props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <Index location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n\nexport default IndexExport\n"],"names":["_ref","color","margin","React","style","backgroundColor","height","IntroSection","darkModeImage","lightModeImage","data","isDarkMode","social","site","siteMetadata","fullName","authorFullName","className","href","download","github","target","rel","FaGithub","linkedin","FaLinkedin","facebook","FaFacebook","email","FaEnvelope","GatsbyImage","image","width","alt","props","StaticQuery","query","render","Object","assign","borderRadius","SkillsetSection","skills","dataJson","map","skill","index","skillLogo","darkModeLogo","lightModeLogo","key","childImageSharp","gatsbyImageData","children","text","position","isVisible","setIsVisible","useState","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","role","ExpandableText","charLimit","isExpanded","setIsExpanded","toString","shouldTruncate","length","displayText","slice","trim","toggleExpand","current","onClick","onKeyPress","e","tabIndex","ExperienceStatus","ExperienceSection","showAll","setShowAll","allExperiences","experience","visibleExperiences","getTagClassnameByStatus","status","getTagClassnameByType","type","toLowerCase","getTooltipTextByType","org","orgLogo","returnOffer","Tooltip","FaStar","size","description","tags","tag","tagIndex","roles","roleIndex","title","start","end","ProjectsSection","allProjects","projects","visibleProjects","project","thumbnail","associatedWith","logo","src","images","fallback","confidential","MdOutlineSecurity","stacks","_ref2","objectFit","attachments","repository","documentation","FaBookOpen","FaLink","Index","location","navHeading","aboutPic","ThemeContextProvider","Layout","path","Seo","keywords","HorizontalLine","AboutSection"],"sourceRoot":""}